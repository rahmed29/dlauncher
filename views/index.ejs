<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Inspiron</title>
    <link rel="preconnect" href="https://rsms.me/" />
    <link rel="stylesheet" href="https://rsms.me/inter/inter.css" />
    <link rel="stylesheet" href="/style.css" />
  </head>
  <body class="dark">
    <script>
      if (
        window.matchMedia &&
        window.matchMedia("(prefers-color-scheme: dark)").matches
      ) {
      } else {
        document.body.classList.remove("dark");
        document.body.classList.add("light");
      }
      window
        .matchMedia("(prefers-color-scheme: dark)")
        .addEventListener("change", (event) => {
          const newColorScheme = event.matches ? "dark" : "light";
          if (newColorScheme === "dark") {
            document.body.classList.remove("light");
            document.body.classList.add("dark");
          } else {
            document.body.classList.remove("dark");
            document.body.classList.add("light");
          }
        });
    </script>
    <div id="main">
      <div id="toggleRouting">
        <input type="checkbox" id="cbox" />
        <label
          for="cbox"
          title="When enabled, applications on the dashboard will be links that dynamically route your request based on your connecting IP instead of showing you separate links for LAN and Tailscale."
          >Enable Routing</label
        >
      </div>
      <h2 id="title" class="linear-text-gradient">Inspiron</h2>
      <span id="desc"><i id="home">Self-Hosted Applications</i></span>
      <div id="albums"></div>
    </div>
    <script type="module">
      document.getElementById("cbox").addEventListener("input", async (e) => {
        const response = await fetch("/toggleRouting", {
          method: "POST",
          cache: "no-store",
        });
        const json = await response.json();
        if (response.ok) {
          generateHtml(json.routingEnabled);
          document.getElementById("cbox").checked = json.routingEnabled;
        }
      });

      const response = await fetch("/getRoutes", { cache: "no-store" });
      const json = await response.json();
      const routes = json.routes;
      document.getElementById("cbox").checked = json.routingEnabled;

      generateHtml(json.routingEnabled);

      function generateHtml(routing) {
        for (const img of document.getElementsByClassName("albumArt")) {
          img.onerror = null;
        }

        let html_ = "";
        for (let i = 0; i < routes.length; i++) {
          html_ += generateAlbum(routes[i], i);
        }
        document.getElementById("albums").innerHTML = html_;

        // Yes, this is technically susceptible to XSS
        function generateAlbum(obj, i) {
          if (routing) {
            return `
            <a href = "/${obj.shorthand}" target="_blank" style = "text-decoration: none;">
              <div class="album">
              <img
                class="albumArt"
                src="${obj.img}"
                onerror="this.onerror=null; this.src='/album_art/avatar.png'"
              />
              <div class="albumDetails">${obj.name}</div>
              </div>
            </a>
        `;
          }
          return `
          <div class="album">
            <img
              class="albumArt"
              src="${obj.img}"
              onerror="this.onerror=null; this.src='/album_art/avatar.png'"
            />
            <div class="albumDetails">
              <span class = "appName">${obj.name}</span>&nbsp;&nbsp;<a href = "${obj.lan}" target="_blank">LAN</a>&nbsp;|&nbsp;<a href = "${obj.ts}" target="_blank">Tailscale</a>
            </div>
          </div>
        `;
        }
      }
    </script>
  </body>
</html>
